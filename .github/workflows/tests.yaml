name: "Tests"

on:
    push:
        branches: ["main"]
    pull_request: null
    schedule:
        # Do not make it the first of the month and/or midnight since it is a very busy time
        - cron: "* 10 5 * *"

jobs:
    tests:
        runs-on: "ubuntu-latest"
        name: "Tests (PHP ${{ matrix.php }})"
        strategy:
            fail-fast: false
            matrix:
                php:
                    - "8.1"
                    - "8.2"

        steps:
            -   name: "Check out repository code"
                uses: "actions/checkout@v2"

            -   name: "Setup PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    php-version: "${{ matrix.php }}"
                    tools: "composer"

            -   name: "Install Composer dependencies"
                uses: "ramsey/composer-install@v2"

            -   name: "Run tests"
                run: "make phpunit"

    symfony-version:
        runs-on: "ubuntu-latest"
        name: "Tests (PHP ${{ matrix.config.php }}) with Symfony ${{ matrix.config.symfony_version }}"
        strategy:
            fail-fast: false
            matrix:
                config:
                    - php: "7.4"
                      symfony_version: "4.4"
                      symfony_conflict: ">=5.0"
                    - php: "7.4"
                      symfony_version: "5.4"
                      symfony_conflict: ">=6.0,<5.0"
                    # The case of Symfony 4.4 with PHP 8 is just too impractical to
                    # bother with.
                    - php: "8.0"
                      symfony_version: "5.4"
                      symfony_conflict: "<=5.0,>=6.0"
                    - php: "8.1"
                      symfony_version: "5.4"
                      symfony_conflict: "<=5.0,>=6.0"

        steps:
            -   name: "Check out repository code"
                uses: "actions/checkout@v2"

            -   name: "Setup PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    php-version: "${{ matrix.config.php }}"
                    tools: "composer"

            -   name: "Fix the Symfony versions"
                run: "bin/fix-symfony-versions \"${{ matrix.config.symfony_conflict }}\""

            -   name: "Install Composer dependencies"
                uses: "ramsey/composer-install@v2"

            -   name: "Run tests"
                run: "make phpunit"

    infection:
        runs-on: "ubuntu-latest"
        name: "Infection (PHP ${{ matrix.php }})"
        strategy:
            fail-fast: false
            matrix:
                php:
                    - "8.2"

        steps:
            -   name: "Check out repository code"
                uses: "actions/checkout@v2"

            -   name: "Setup PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    php-version: "${{ matrix.php }}"
                    tools: "composer"
                    coverage: "pcov"

            -   name: "Install Composer dependencies"
                uses: "ramsey/composer-install@v2"

            -   name: "Run tests with coverage and Infection"
                run: "make infection"

    # This is a "trick", a meta task which does not change, and we can use in
    # the protected branch rules as opposed to the individual tests which
    # may change regularly.
    validate-tests:
        name: "Tests Status"
        runs-on: "ubuntu-latest"
        needs:
            - "tests"
            - "symfony-version"
            - "infection"
        if: "always()"
        steps:
            - name: "Successful run"
              if: "${{ !(contains(needs.*.result, 'failure')) }}"
              run: "exit 0"

            - name: "Failing run"
              if: "${{ contains(needs.*.result, 'failure') }}"
              run: "exit 1"
